/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Add support for building a CLI Java application
    id 'application'
}

sourceSets {
    main.java.srcDirs = ['src/patentdata/opstools']
    main.resources.srcDirs = ['config']
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.7'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
  
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20200518'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

application {
    // Define the main class for the application
    mainClassName = 'patentdata.opstools.PDFPatentPipeline'
}

defaultTasks 'clean', 'fatJar'

task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.WARN
    manifest {
        attributes 'Main-Class': 'patentdata.opstools.PDFPatentPipeline'
    }
    archiveBaseName = 'pdfpatents'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    {
        exclude "META-INF/*"
    }
    with jar
}
